// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: hostagent.proto

package landscape_hostagent_api

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// InstanceState reports the supported states of an instance communicated by the agent.
type InstanceState int32

const (
	InstanceState_Stopped InstanceState = 0
	InstanceState_Running InstanceState = 1
)

// Enum value maps for InstanceState.
var (
	InstanceState_name = map[int32]string{
		0: "Stopped",
		1: "Running",
	}
	InstanceState_value = map[string]int32{
		"Stopped": 0,
		"Running": 1,
	}
)

func (x InstanceState) Enum() *InstanceState {
	p := new(InstanceState)
	*p = x
	return p
}

func (x InstanceState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (InstanceState) Descriptor() protoreflect.EnumDescriptor {
	return file_hostagent_proto_enumTypes[0].Descriptor()
}

func (InstanceState) Type() protoreflect.EnumType {
	return &file_hostagent_proto_enumTypes[0]
}

func (x InstanceState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use InstanceState.Descriptor instead.
func (InstanceState) EnumDescriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{0}
}

// CommandState reports the current state of a command sent from Landscape
type CommandState int32

const (
	CommandState_Queued     CommandState = 0
	CommandState_InProgress CommandState = 1
	CommandState_Completed  CommandState = 2
)

// Enum value maps for CommandState.
var (
	CommandState_name = map[int32]string{
		0: "Queued",
		1: "InProgress",
		2: "Completed",
	}
	CommandState_value = map[string]int32{
		"Queued":     0,
		"InProgress": 1,
		"Completed":  2,
	}
)

func (x CommandState) Enum() *CommandState {
	p := new(CommandState)
	*p = x
	return p
}

func (x CommandState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CommandState) Descriptor() protoreflect.EnumDescriptor {
	return file_hostagent_proto_enumTypes[1].Descriptor()
}

func (CommandState) Type() protoreflect.EnumType {
	return &file_hostagent_proto_enumTypes[1]
}

func (x CommandState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CommandState.Descriptor instead.
func (CommandState) EnumDescriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1}
}

type Empty struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Empty) Reset() {
	*x = Empty{}
	mi := &file_hostagent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{0}
}

type HostAgentInfo struct {
	state             protoimpl.MessageState        `protogen:"open.v1"`
	Token             string                        `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`                                                          // token corresponds to the Pro token subscription. Discared on on-prem landscape server.
	Uid               string                        `protobuf:"bytes,2,opt,name=uid,proto3" json:"uid,omitempty"`                                                              // uid is empty on the first request if the host never contacted landscape. Landscape generates one for the hostagent to send it back with each transaction.
	Hostname          string                        `protobuf:"bytes,3,opt,name=hostname,proto3" json:"hostname,omitempty"`                                                    // hostname is literally the name of the host itself.
	Instances         []*HostAgentInfo_InstanceInfo `protobuf:"bytes,4,rep,name=instances,proto3" json:"instances,omitempty"`                                                  // instances are all the machine instances registered on the machine.
	AccountName       string                        `protobuf:"bytes,5,opt,name=account_name,json=accountName,proto3" json:"account_name,omitempty"`                           // account_name is the account used in Landscape SaaS.
	RegistrationKey   *string                       `protobuf:"bytes,6,opt,name=registration_key,json=registrationKey,proto3,oneof" json:"registration_key,omitempty"`         // registration_key is an optional account-wide key used to register clients.
	DefaultInstanceId *string                       `protobuf:"bytes,7,opt,name=default_instance_id,json=defaultInstanceId,proto3,oneof" json:"default_instance_id,omitempty"` // default_instance_id is the id of the default instance.
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HostAgentInfo) Reset() {
	*x = HostAgentInfo{}
	mi := &file_hostagent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostAgentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAgentInfo) ProtoMessage() {}

func (x *HostAgentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAgentInfo.ProtoReflect.Descriptor instead.
func (*HostAgentInfo) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1}
}

func (x *HostAgentInfo) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *HostAgentInfo) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

func (x *HostAgentInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostAgentInfo) GetInstances() []*HostAgentInfo_InstanceInfo {
	if x != nil {
		return x.Instances
	}
	return nil
}

func (x *HostAgentInfo) GetAccountName() string {
	if x != nil {
		return x.AccountName
	}
	return ""
}

func (x *HostAgentInfo) GetRegistrationKey() string {
	if x != nil && x.RegistrationKey != nil {
		return *x.RegistrationKey
	}
	return ""
}

func (x *HostAgentInfo) GetDefaultInstanceId() string {
	if x != nil && x.DefaultInstanceId != nil {
		return *x.DefaultInstanceId
	}
	return ""
}

// Command is an instruction that landscape can send via its stream to the host agent.
// The command is self-explanatory or specified.
type Command struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// only one command can be passed at a time.
	//
	// Types that are valid to be assigned to Cmd:
	//
	//	*Command_AssignHost_
	//	*Command_Start_
	//	*Command_Stop_
	//	*Command_Install_
	//	*Command_Uninstall_
	//	*Command_SetDefault_
	//	*Command_ShutdownHost_
	Cmd isCommand_Cmd `protobuf_oneof:"cmd"`
	// request_id is a  unique identifier assigned by landscape to each command request.
	RequestId     string `protobuf:"bytes,8,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command) Reset() {
	*x = Command{}
	mi := &file_hostagent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command) ProtoMessage() {}

func (x *Command) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command.ProtoReflect.Descriptor instead.
func (*Command) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{2}
}

func (x *Command) GetCmd() isCommand_Cmd {
	if x != nil {
		return x.Cmd
	}
	return nil
}

func (x *Command) GetAssignHost() *Command_AssignHost {
	if x != nil {
		if x, ok := x.Cmd.(*Command_AssignHost_); ok {
			return x.AssignHost
		}
	}
	return nil
}

func (x *Command) GetStart() *Command_Start {
	if x != nil {
		if x, ok := x.Cmd.(*Command_Start_); ok {
			return x.Start
		}
	}
	return nil
}

func (x *Command) GetStop() *Command_Stop {
	if x != nil {
		if x, ok := x.Cmd.(*Command_Stop_); ok {
			return x.Stop
		}
	}
	return nil
}

func (x *Command) GetInstall() *Command_Install {
	if x != nil {
		if x, ok := x.Cmd.(*Command_Install_); ok {
			return x.Install
		}
	}
	return nil
}

func (x *Command) GetUninstall() *Command_Uninstall {
	if x != nil {
		if x, ok := x.Cmd.(*Command_Uninstall_); ok {
			return x.Uninstall
		}
	}
	return nil
}

func (x *Command) GetSetDefault() *Command_SetDefault {
	if x != nil {
		if x, ok := x.Cmd.(*Command_SetDefault_); ok {
			return x.SetDefault
		}
	}
	return nil
}

func (x *Command) GetShutdownHost() *Command_ShutdownHost {
	if x != nil {
		if x, ok := x.Cmd.(*Command_ShutdownHost_); ok {
			return x.ShutdownHost
		}
	}
	return nil
}

func (x *Command) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

type isCommand_Cmd interface {
	isCommand_Cmd()
}

type Command_AssignHost_ struct {
	AssignHost *Command_AssignHost `protobuf:"bytes,1,opt,name=assign_host,json=assignHost,proto3,oneof"`
}

type Command_Start_ struct {
	Start *Command_Start `protobuf:"bytes,2,opt,name=start,proto3,oneof"`
}

type Command_Stop_ struct {
	Stop *Command_Stop `protobuf:"bytes,3,opt,name=stop,proto3,oneof"`
}

type Command_Install_ struct {
	Install *Command_Install `protobuf:"bytes,4,opt,name=install,proto3,oneof"`
}

type Command_Uninstall_ struct {
	Uninstall *Command_Uninstall `protobuf:"bytes,5,opt,name=uninstall,proto3,oneof"`
}

type Command_SetDefault_ struct {
	SetDefault *Command_SetDefault `protobuf:"bytes,6,opt,name=set_default,json=setDefault,proto3,oneof"`
}

type Command_ShutdownHost_ struct {
	ShutdownHost *Command_ShutdownHost `protobuf:"bytes,7,opt,name=shutdown_host,json=shutdownHost,proto3,oneof"`
}

func (*Command_AssignHost_) isCommand_Cmd() {}

func (*Command_Start_) isCommand_Cmd() {}

func (*Command_Stop_) isCommand_Cmd() {}

func (*Command_Install_) isCommand_Cmd() {}

func (*Command_Uninstall_) isCommand_Cmd() {}

func (*Command_SetDefault_) isCommand_Cmd() {}

func (*Command_ShutdownHost_) isCommand_Cmd() {}

// CommandStatus is a message sent by the host agent reporting the current status of a Command.
type CommandStatus struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// request_id is the unique identifier of the command request this message is about.
	RequestId string `protobuf:"bytes,1,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"`
	// command_state is the current state of handling for the spcific command being reported.
	CommandState CommandState `protobuf:"varint,2,opt,name=command_state,json=commandState,proto3,enum=landscapehostagentapi.CommandState" json:"command_state,omitempty"`
	// error is the reason of failure to complete such command or empty on the success case.
	Error         string `protobuf:"bytes,3,opt,name=error,proto3" json:"error,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommandStatus) Reset() {
	*x = CommandStatus{}
	mi := &file_hostagent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommandStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommandStatus) ProtoMessage() {}

func (x *CommandStatus) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommandStatus.ProtoReflect.Descriptor instead.
func (*CommandStatus) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{3}
}

func (x *CommandStatus) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *CommandStatus) GetCommandState() CommandState {
	if x != nil {
		return x.CommandState
	}
	return CommandState_Queued
}

func (x *CommandStatus) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

// InstanceInfo gather all the information of a given instance.
type HostAgentInfo_InstanceInfo struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	Id                 string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name               string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                  // name is the hostname of the instance.
	VersionId          string                 `protobuf:"bytes,3,opt,name=version_id,json=versionId,proto3" json:"version_id,omitempty"`                                                       // version_id string as in VERSION_ID in /etc/os-release
	InstanceState      InstanceState          `protobuf:"varint,4,opt,name=instance_state,json=instanceState,proto3,enum=landscapehostagentapi.InstanceState" json:"instance_state,omitempty"` // instance_state are the defined states of the instances.
	CreatedByLandscape bool                   `protobuf:"varint,5,opt,name=created_by_landscape,json=createdByLandscape,proto3" json:"created_by_landscape,omitempty"`                         // created_by_landscape indicates this instance was created through an install command from Landscape
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *HostAgentInfo_InstanceInfo) Reset() {
	*x = HostAgentInfo_InstanceInfo{}
	mi := &file_hostagent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HostAgentInfo_InstanceInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostAgentInfo_InstanceInfo) ProtoMessage() {}

func (x *HostAgentInfo_InstanceInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostAgentInfo_InstanceInfo.ProtoReflect.Descriptor instead.
func (*HostAgentInfo_InstanceInfo) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{1, 0}
}

func (x *HostAgentInfo_InstanceInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *HostAgentInfo_InstanceInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HostAgentInfo_InstanceInfo) GetVersionId() string {
	if x != nil {
		return x.VersionId
	}
	return ""
}

func (x *HostAgentInfo_InstanceInfo) GetInstanceState() InstanceState {
	if x != nil {
		return x.InstanceState
	}
	return InstanceState_Stopped
}

func (x *HostAgentInfo_InstanceInfo) GetCreatedByLandscape() bool {
	if x != nil {
		return x.CreatedByLandscape
	}
	return false
}

type Command_AssignHost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Uid           string                 `protobuf:"bytes,1,opt,name=uid,proto3" json:"uid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command_AssignHost) Reset() {
	*x = Command_AssignHost{}
	mi := &file_hostagent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command_AssignHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_AssignHost) ProtoMessage() {}

func (x *Command_AssignHost) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_AssignHost.ProtoReflect.Descriptor instead.
func (*Command_AssignHost) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{2, 0}
}

func (x *Command_AssignHost) GetUid() string {
	if x != nil {
		return x.Uid
	}
	return ""
}

type Command_Start struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command_Start) Reset() {
	*x = Command_Start{}
	mi := &file_hostagent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command_Start) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Start) ProtoMessage() {}

func (x *Command_Start) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Start.ProtoReflect.Descriptor instead.
func (*Command_Start) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{2, 1}
}

func (x *Command_Start) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Command_Stop struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command_Stop) Reset() {
	*x = Command_Stop{}
	mi := &file_hostagent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command_Stop) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Stop) ProtoMessage() {}

func (x *Command_Stop) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Stop.ProtoReflect.Descriptor instead.
func (*Command_Stop) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{2, 2}
}

func (x *Command_Stop) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type Command_Install struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	Id        string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Cloudinit *string                `protobuf:"bytes,2,opt,name=cloudinit,proto3,oneof" json:"cloudinit,omitempty"` // cloudinit is the yaml configuration to optionally pass to an instance.
	// URL to a WSL rootfs image we will download and import from. It will be registered under "id".
	// If this entry is not set, Ubuntu Pro for WSL will download a package from the Microsoft store
	// matching WSL distribution name as available in wsl --install.
	RootfsURL     *string `protobuf:"bytes,3,opt,name=rootfsURL,proto3,oneof" json:"rootfsURL,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command_Install) Reset() {
	*x = Command_Install{}
	mi := &file_hostagent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command_Install) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Install) ProtoMessage() {}

func (x *Command_Install) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Install.ProtoReflect.Descriptor instead.
func (*Command_Install) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{2, 3}
}

func (x *Command_Install) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Command_Install) GetCloudinit() string {
	if x != nil && x.Cloudinit != nil {
		return *x.Cloudinit
	}
	return ""
}

func (x *Command_Install) GetRootfsURL() string {
	if x != nil && x.RootfsURL != nil {
		return *x.RootfsURL
	}
	return ""
}

type Command_Uninstall struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command_Uninstall) Reset() {
	*x = Command_Uninstall{}
	mi := &file_hostagent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command_Uninstall) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_Uninstall) ProtoMessage() {}

func (x *Command_Uninstall) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_Uninstall.ProtoReflect.Descriptor instead.
func (*Command_Uninstall) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{2, 4}
}

func (x *Command_Uninstall) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// SetDefault changes the default instance on the host.
type Command_SetDefault struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command_SetDefault) Reset() {
	*x = Command_SetDefault{}
	mi := &file_hostagent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command_SetDefault) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_SetDefault) ProtoMessage() {}

func (x *Command_SetDefault) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_SetDefault.ProtoReflect.Descriptor instead.
func (*Command_SetDefault) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{2, 5}
}

func (x *Command_SetDefault) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

// ShutdownHost forces a shut down of the agent/controller from landscape perspective (it may autorestart).
type Command_ShutdownHost struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Command_ShutdownHost) Reset() {
	*x = Command_ShutdownHost{}
	mi := &file_hostagent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Command_ShutdownHost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Command_ShutdownHost) ProtoMessage() {}

func (x *Command_ShutdownHost) ProtoReflect() protoreflect.Message {
	mi := &file_hostagent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Command_ShutdownHost.ProtoReflect.Descriptor instead.
func (*Command_ShutdownHost) Descriptor() ([]byte, []int) {
	return file_hostagent_proto_rawDescGZIP(), []int{2, 6}
}

var File_hostagent_proto protoreflect.FileDescriptor

const file_hostagent_proto_rawDesc = "" +
	"\n" +
	"\x0fhostagent.proto\x12\x15landscapehostagentapi\"\a\n" +
	"\x05Empty\"\xac\x04\n" +
	"\rHostAgentInfo\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\x12\x10\n" +
	"\x03uid\x18\x02 \x01(\tR\x03uid\x12\x1a\n" +
	"\bhostname\x18\x03 \x01(\tR\bhostname\x12O\n" +
	"\tinstances\x18\x04 \x03(\v21.landscapehostagentapi.HostAgentInfo.InstanceInfoR\tinstances\x12!\n" +
	"\faccount_name\x18\x05 \x01(\tR\vaccountName\x12.\n" +
	"\x10registration_key\x18\x06 \x01(\tH\x00R\x0fregistrationKey\x88\x01\x01\x123\n" +
	"\x13default_instance_id\x18\a \x01(\tH\x01R\x11defaultInstanceId\x88\x01\x01\x1a\xd0\x01\n" +
	"\fInstanceInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1d\n" +
	"\n" +
	"version_id\x18\x03 \x01(\tR\tversionId\x12K\n" +
	"\x0einstance_state\x18\x04 \x01(\x0e2$.landscapehostagentapi.InstanceStateR\rinstanceState\x120\n" +
	"\x14created_by_landscape\x18\x05 \x01(\bR\x12createdByLandscapeB\x13\n" +
	"\x11_registration_keyB\x16\n" +
	"\x14_default_instance_id\"\xbf\x06\n" +
	"\aCommand\x12L\n" +
	"\vassign_host\x18\x01 \x01(\v2).landscapehostagentapi.Command.AssignHostH\x00R\n" +
	"assignHost\x12<\n" +
	"\x05start\x18\x02 \x01(\v2$.landscapehostagentapi.Command.StartH\x00R\x05start\x129\n" +
	"\x04stop\x18\x03 \x01(\v2#.landscapehostagentapi.Command.StopH\x00R\x04stop\x12B\n" +
	"\ainstall\x18\x04 \x01(\v2&.landscapehostagentapi.Command.InstallH\x00R\ainstall\x12H\n" +
	"\tuninstall\x18\x05 \x01(\v2(.landscapehostagentapi.Command.UninstallH\x00R\tuninstall\x12L\n" +
	"\vset_default\x18\x06 \x01(\v2).landscapehostagentapi.Command.SetDefaultH\x00R\n" +
	"setDefault\x12R\n" +
	"\rshutdown_host\x18\a \x01(\v2+.landscapehostagentapi.Command.ShutdownHostH\x00R\fshutdownHost\x12\x1d\n" +
	"\n" +
	"request_id\x18\b \x01(\tR\trequestId\x1a\x1e\n" +
	"\n" +
	"AssignHost\x12\x10\n" +
	"\x03uid\x18\x01 \x01(\tR\x03uid\x1a\x17\n" +
	"\x05Start\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x1a\x16\n" +
	"\x04Stop\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x1a{\n" +
	"\aInstall\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12!\n" +
	"\tcloudinit\x18\x02 \x01(\tH\x00R\tcloudinit\x88\x01\x01\x12!\n" +
	"\trootfsURL\x18\x03 \x01(\tH\x01R\trootfsURL\x88\x01\x01B\f\n" +
	"\n" +
	"_cloudinitB\f\n" +
	"\n" +
	"_rootfsURL\x1a\x1b\n" +
	"\tUninstall\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x1a\x1c\n" +
	"\n" +
	"SetDefault\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x1a\x0e\n" +
	"\fShutdownHostB\x05\n" +
	"\x03cmd\"\x8e\x01\n" +
	"\rCommandStatus\x12\x1d\n" +
	"\n" +
	"request_id\x18\x01 \x01(\tR\trequestId\x12H\n" +
	"\rcommand_state\x18\x02 \x01(\x0e2#.landscapehostagentapi.CommandStateR\fcommandState\x12\x14\n" +
	"\x05error\x18\x03 \x01(\tR\x05error*)\n" +
	"\rInstanceState\x12\v\n" +
	"\aStopped\x10\x00\x12\v\n" +
	"\aRunning\x10\x01*9\n" +
	"\fCommandState\x12\n" +
	"\n" +
	"\x06Queued\x10\x00\x12\x0e\n" +
	"\n" +
	"InProgress\x10\x01\x12\r\n" +
	"\tCompleted\x10\x022\xc6\x01\n" +
	"\x12LandscapeHostAgent\x12U\n" +
	"\aConnect\x12$.landscapehostagentapi.HostAgentInfo\x1a\x1e.landscapehostagentapi.Command\"\x00(\x010\x01\x12Y\n" +
	"\x11SendCommandStatus\x12$.landscapehostagentapi.CommandStatus\x1a\x1c.landscapehostagentapi.Empty\"\x00BFZDgithub.com/canonical/landscape-hostagent-api;landscape_hostagent_apib\x06proto3"

var (
	file_hostagent_proto_rawDescOnce sync.Once
	file_hostagent_proto_rawDescData []byte
)

func file_hostagent_proto_rawDescGZIP() []byte {
	file_hostagent_proto_rawDescOnce.Do(func() {
		file_hostagent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_hostagent_proto_rawDesc), len(file_hostagent_proto_rawDesc)))
	})
	return file_hostagent_proto_rawDescData
}

var file_hostagent_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_hostagent_proto_msgTypes = make([]protoimpl.MessageInfo, 12)
var file_hostagent_proto_goTypes = []any{
	(InstanceState)(0),                 // 0: landscapehostagentapi.InstanceState
	(CommandState)(0),                  // 1: landscapehostagentapi.CommandState
	(*Empty)(nil),                      // 2: landscapehostagentapi.Empty
	(*HostAgentInfo)(nil),              // 3: landscapehostagentapi.HostAgentInfo
	(*Command)(nil),                    // 4: landscapehostagentapi.Command
	(*CommandStatus)(nil),              // 5: landscapehostagentapi.CommandStatus
	(*HostAgentInfo_InstanceInfo)(nil), // 6: landscapehostagentapi.HostAgentInfo.InstanceInfo
	(*Command_AssignHost)(nil),         // 7: landscapehostagentapi.Command.AssignHost
	(*Command_Start)(nil),              // 8: landscapehostagentapi.Command.Start
	(*Command_Stop)(nil),               // 9: landscapehostagentapi.Command.Stop
	(*Command_Install)(nil),            // 10: landscapehostagentapi.Command.Install
	(*Command_Uninstall)(nil),          // 11: landscapehostagentapi.Command.Uninstall
	(*Command_SetDefault)(nil),         // 12: landscapehostagentapi.Command.SetDefault
	(*Command_ShutdownHost)(nil),       // 13: landscapehostagentapi.Command.ShutdownHost
}
var file_hostagent_proto_depIdxs = []int32{
	6,  // 0: landscapehostagentapi.HostAgentInfo.instances:type_name -> landscapehostagentapi.HostAgentInfo.InstanceInfo
	7,  // 1: landscapehostagentapi.Command.assign_host:type_name -> landscapehostagentapi.Command.AssignHost
	8,  // 2: landscapehostagentapi.Command.start:type_name -> landscapehostagentapi.Command.Start
	9,  // 3: landscapehostagentapi.Command.stop:type_name -> landscapehostagentapi.Command.Stop
	10, // 4: landscapehostagentapi.Command.install:type_name -> landscapehostagentapi.Command.Install
	11, // 5: landscapehostagentapi.Command.uninstall:type_name -> landscapehostagentapi.Command.Uninstall
	12, // 6: landscapehostagentapi.Command.set_default:type_name -> landscapehostagentapi.Command.SetDefault
	13, // 7: landscapehostagentapi.Command.shutdown_host:type_name -> landscapehostagentapi.Command.ShutdownHost
	1,  // 8: landscapehostagentapi.CommandStatus.command_state:type_name -> landscapehostagentapi.CommandState
	0,  // 9: landscapehostagentapi.HostAgentInfo.InstanceInfo.instance_state:type_name -> landscapehostagentapi.InstanceState
	3,  // 10: landscapehostagentapi.LandscapeHostAgent.Connect:input_type -> landscapehostagentapi.HostAgentInfo
	5,  // 11: landscapehostagentapi.LandscapeHostAgent.SendCommandStatus:input_type -> landscapehostagentapi.CommandStatus
	4,  // 12: landscapehostagentapi.LandscapeHostAgent.Connect:output_type -> landscapehostagentapi.Command
	2,  // 13: landscapehostagentapi.LandscapeHostAgent.SendCommandStatus:output_type -> landscapehostagentapi.Empty
	12, // [12:14] is the sub-list for method output_type
	10, // [10:12] is the sub-list for method input_type
	10, // [10:10] is the sub-list for extension type_name
	10, // [10:10] is the sub-list for extension extendee
	0,  // [0:10] is the sub-list for field type_name
}

func init() { file_hostagent_proto_init() }
func file_hostagent_proto_init() {
	if File_hostagent_proto != nil {
		return
	}
	file_hostagent_proto_msgTypes[1].OneofWrappers = []any{}
	file_hostagent_proto_msgTypes[2].OneofWrappers = []any{
		(*Command_AssignHost_)(nil),
		(*Command_Start_)(nil),
		(*Command_Stop_)(nil),
		(*Command_Install_)(nil),
		(*Command_Uninstall_)(nil),
		(*Command_SetDefault_)(nil),
		(*Command_ShutdownHost_)(nil),
	}
	file_hostagent_proto_msgTypes[8].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_hostagent_proto_rawDesc), len(file_hostagent_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   12,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_hostagent_proto_goTypes,
		DependencyIndexes: file_hostagent_proto_depIdxs,
		EnumInfos:         file_hostagent_proto_enumTypes,
		MessageInfos:      file_hostagent_proto_msgTypes,
	}.Build()
	File_hostagent_proto = out.File
	file_hostagent_proto_goTypes = nil
	file_hostagent_proto_depIdxs = nil
}
